/* region Syntax Highlighting Validation Test;

/* Test all major syntax highlighting constructs;

/* 1. Keywords and Control Structures;
:DECLARE sTest, nValue, bFlag;
:IF bFlag;
    :FOR nI := 1 :TO 10;
        :BEGINCASE;
        :CASE nI = 1;
            /* First case;
        :OTHERWISE;
            /* Default;
        :ENDCASE;
    :NEXT;
:ENDIF;

/* 2. Operators - All Types;
nValue := 10;       /* Assignment;
nValue += 5;        /* Compound assignment;
nValue++;           /* Increment;
++nValue;           /* Pre-increment;
nPositive := +123;  /* Unary plus;
nNegative := -456;  /* Unary minus;
bNot := !bFlag;     /* Unary not;
bLogicalNot := .NOT. bFlag; /* Logical not;

/* 3. Comparison and Logical Operators;
bEqual := (nValue = 10);
bExactEqual := (nValue == 10);
bResult := .T. .AND. .F.;
bResult := .T. .OR. .F.;

/* 4. Functions - All Types;
nLength := Len(sTest);           /* Built-in function;
nMath := Sqrt(16);               /* Math function;
nResult := DoProc("Test", {1});  /* DoProc function;
arData := SqlExecute("SELECT * FROM table WHERE id = ?id?", {123}); /* SQL function;
nBitwise := _AND(255, 128);      /* Bitwise function;

/* 5. Arrays and Code Blocks;
arItems := {1, 2, {3, 4}, "text"};
nFirst := arItems[1];
nNested := arItems[3][1];
fnLambda := {|x| x * x};

/* 6. Object Operations;
oObject := CreateUDObject("MyClass");
sProperty := oObject:PropertyName;
nResult := oObject:MethodCall();

/* 7. String Literals - All Three Types;
sDouble := "Double quoted string";
sSingle := 'Single quoted string';
sBracket := [Bracket quoted string];

/* 8. Literals;
bTrue := .T.;
bFalse := .F.;
nNumber := 123.456;
nScientific := 1.23e5;
dDate := {2024, 12, 23, 14, 30, 0};
nNull := NIL;

/* 9. Hungarian Notation Variables;
sName := "String variable";
nCount := 42;
bIsValid := .T.;
arItems := {1, 2, 3};
oObject := CreateUDObject();

/* 10. Error Handling;
:TRY;
    /* Code that might fail;
    nResult := nValue / 0;
:CATCH;
    /* Error handling;
:FINALLY;
    /* Cleanup;
:ENDTRY;

/* endregion;
