/* 
 * Comprehensive SSL Completion Provider Test File
 * This file tests various completion scenarios for the SSL language
 ;

/* Test 1: Basic keywords at line start;
:DECLARE sTestVar, nCount, bIsValid;

/* Test 2: Procedure definition with parameters;
:PROCEDURE TestProcedure;
:PARAMETERS sInput, nValue;
    :DECLARE sResult;
    
    /* Test 3: Conditional statements;
    :IF nValue > 0;
        sResult := "positive";
    :ELSE;
        sResult := "negative or zero";
    :ENDIF;
    
    /* Test 4: Loop structures;
    :FOR i := 1 :TO 10;
        /* Loop body;
    :NEXT;
    
    /* Test 5: WHILE loop;
    :WHILE nValue > 0;
        nValue := nValue - 1;
    :ENDWHILE;
    
    /* Test 6: CASE statements;
    :BEGINCASE;
    :CASE nValue = 1;
        sResult := "one";
    :CASE nValue = 2;
        sResult := "two";
    :OTHERWISE;
        sResult := "other";
    :ENDCASE;
    
    /* Test 7: Error handling;
    :TRY;
        /* Some risky operation;
        nValue := 10 / 0;
    :CATCH;
        /* Handle error;
        sResult := "error occurred";
    :ENDTRY;
    
    :RETURN sResult;
:ENDPROC;

/* Test 8: Function calls - should suggest functions when typing ;
sResult := Left("hello world", 5);
nLength := Len(sResult);
arData := BuildArray("item1,item2,item3", .F., ",");

/* Test 9: Object property access with colon ;
myObject := CreateUDObject();
myObject:Property1 := "value";
sValue := myObject:Property2;

/* Test 10: SQL statements ;
arResults := SqlExecute("SELECT * FROM table WHERE id = ?id?", {123});

/* Test 11: Assignment operators ;
nValue := 10;
nValue += 5;
nValue -= 2;
nValue *= 3;
nValue /= 4;

/* Test 12: Logical operators and literals ;
bResult := .T.;
bAnother := .F.;
bCombined := bResult .AND. bAnother;
bOr := bResult .OR. bAnother;
bNot := .NOT. bResult;

/* Test 13: Null/NIL values ;
varNull := NIL;

/* Test 14: Built-in function categories ;
/* Array Functions ;
Aadd(arData, "new item");
nPos := Ascan(arData, "item1");

/* String Functions ;
sUpper := Upper("lowercase");
sClean := AllTrim("  spaced  ");

/* Date Functions ;
dToday := Today();
sDate := DtoC(dToday);

/* Numeric Functions ;
nRandom := Rand();
nMax := Max(10, 20, 30);

/* Test 15: Regions and inline code ;
:REGION Data Processing;
    /* Process data here ;
:ENDREGION;

:BEGININLINECODE "CustomCode";
    /* Some inline code ;
:ENDINLINECODE;

/* Test 16: Comments that should not trigger completion ;
/* This is a comment - no completion needed here ;

/* Test 17: Increment/decrement operators ;
nCounter := 0;
nCounter++;
++nCounter;
nCounter--;
--nCounter;
