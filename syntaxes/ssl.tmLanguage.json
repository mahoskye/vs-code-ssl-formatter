{
    "name": "STARLIMS Scripting Language",
    "scopeName": "source.ssl",
    "patterns": [
        { "include": "#keywords" },
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#functions" },
        { "include": "#builtInFunctions" },
        { "include": "#arrays" },
        { "include": "#variables" },
        { "include": "#operators" },
        { "include": "#built-in-literals" },
        { "include": "#numbers" },
        { "include": "#indexers" }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.ssl",
                    "match": "(?<!\\w)(:IF|:ELSE|:ENDIF|:WHILE|:ENDWHILE|:FOR|:NEXT|:BEGINCASE|:CASE|:ENDCASE|:RETURN|:INCLUDE|:DECLARE|:PARAMETERS|:PROCEDURE|:ENDPROC|:PUBLIC|:LOOP|:EXITLOOP|:LABEL|:REGION|:ENDREGION|:CLASS|:INHERIT|:ERROR|:RESUME)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.ssl",
                    "begin": "\"",
                    "end": "\""
                },
                {
                    "name": "string.quoted.single.ssl",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.other.ssl",
                    "begin": "\\[",
                    "end": "\\]"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.ssl",
                    "begin": "/\\*",
                    "end": ";"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.ssl",
                    "match": "(?i)\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
                }
            ]
        },
        "builtInFunctions": {
            "patterns": [
                {
                    "name": "support.function.builtin.ssl",
                    "match": "(?i)\\b(SqlExecute|ExtractCol|BuildString|DoProc|ExecFunction|LimsOleConnect|EndLimsOleConnect|CreateUdObject|GetRegion|ExecUdf|GetInlineCode|DeleteInlineCode|eval|ArrayNew|AScan|LimsTypeEx|Len|Chr|Empty|Today|LimsString|Aadd|BuildStringForIn|BuildArray|BuildArray2|BuildArraySQL|CompArray|DelArray|SortArray)\\b"
                }
            ]
        },
        "arrays": {
            "patterns": [
                {
                    "match": "(\\{)([^}]*)(\\})",
                    "captures": {
                        "1": { "name": "punctuation.definition.array.begin.ssl" },
                        "2": { "name": "meta.array.contents.ssl" },
                        "3": { "name": "punctuation.definition.array.end.ssl" }
                    }
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.ssl",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.ssl",
                    "match": "(:=|\\+|\\-|\\*|\\/|\\%|\\^|\\>|\\<|\\>=|\\<=|\\=\\=|\\<\\>|\\!\\=|\\.|\\:|\\+=|\\-=|\\*=|\\/=|\\%=|\\^=)"
                }
            ]
        },
        "built-in-literals": {
            "patterns": [
                {
                    "name": "constant.language.boolean.ssl",
                    "match": "\\b(\\.T\\.|\\.F\\.)\\b"
                },
                {
                    "name": "constant.language.nil.ssl",
                    "match": "\\bNIL\\b"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.ssl",
                    "match": "\\b([0-9]+(\\.([0-9]+))?|\\.([0-9]+))\\b"
                }
            ]
        },
        "indexers": {
            "patterns": [
                {
                    "match": "(\\[)([^\\]]*)(\\])",
                    "captures": {
                        "1": { "name": "punctuation.squarebracket.open.ssl" },
                        "2": { "name": "meta.indexer.ssl" },
                        "3": { "name": "punctuation.squarebracket.close.ssl" }
                    }
                }
            ]
        }
    }
}
